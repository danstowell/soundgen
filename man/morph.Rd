% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/morph.R
\name{morph}
\alias{morph}
\title{Morph sounds}
\usage{
morph(formula1, formula2, nHybrids, playMorphs = TRUE, savePath = NA,
  samplingRate = 16000)
}
\arguments{
\item{formula1, formula2}{lists of parameters for calling \code{\link{soundgen}} that produce the two target sounds between which morphing will occur}

\item{nHybrids}{the length of morphing sequence, including target sounds}

\item{playMorphs}{if TRUE, the morphing sequence will be played}

\item{savePath}{if it is the path to an existing directory, morphs will be saved there as individual .wav files (defaults to NA)}

\item{samplingRate}{sampling rate of output (Hz)}
}
\value{
A list of two sublists ('formulas' and 'sounds'), each sublist of length nHybrids. For ex., the formula for the second hybrid is m$formulas[[2]], and the waveform is m$sounds[[2]]
}
\description{
Takes two formulas for synthesizing two target sounds and produces a number of intermediate forms (morphs), attempting to go from one target sound to the other in a specified number of equal steps.
}
\examples{
# write or copy-paste two formulas from the app soundgen_app(), for example:
formula1 = list(nSyl=1, sylDur_mean=1190, pauseDur_mean=100, noiseAmount=0,
  noiseIntensity=50, attackLen=50, jitterDep=3, jitterLength_ms=1,
  vibratoFreq=5, vibratoDep=0, shimmerDep=0, formantStrength=1,
  extraFormants_ampl=20, creakyBreathy=0, rolloff_exp=-24,
  rolloff_exp_delta=0, adjust_rolloff_per_kHz=-6, quadratic_delta=20,
  quadratic_nHarm=1, rolloff_lip=6, trill_dep=0, trill_freq=30,
  rolloff_breathing=-13, temperature=0.025, min_epoch_length_ms=300,
  g0=100, sideband_width_hz=100, maleFemale=0, samplingRate=16000,
  windowLength_points=512, overlap=75, pitch_floor=25, pitch_ceiling=3500,
  pitchSamplingRate=3500, vocalTract_length=15.5, repeatBout=1,
  pitchAnchors=data.frame(time=c(0,.05,.25,.35,1),
  value=c(240,305,250,260,250)), pitchAnchors_global=data.frame(time=c(0,1),
  value=c(0,0)), breathingAnchors=data.frame(time=c(-50,1214),
  value=c(-50,-70)), mouthAnchors=data.frame(time=c(0,0.1,.4,1),
  value=c(0.18,0.5,.2,.1)), amplAnchors=data.frame(time=c(0,0.16,1),
  value=c(19,120,120)), amplAnchors_global=data.frame(time=c(0,1),
  value=c(120,120)), exactFormants=list(f1=data.frame(time=c(0), freq=c(700),
  amp=c(30), width=c(80)), f2=data.frame(time=c(0), freq=c(900), amp=c(30),
  width=c(120)), f3=data.frame(time=c(0), freq=c(1500), amp=c(20),
  width=c(150))), exactFormants_unvoiced=NA)
formula2 = list(nSyl=1, sylDur_mean=240, pauseDur_mean=100, noiseAmount=100,
  noiseIntensity=50, attackLen=1, jitterDep=5.1, jitterLength_ms=1,
  vibratoFreq=5, vibratoDep=0, shimmerDep=0, formantStrength=1.3,
  extraFormants_ampl=15, creakyBreathy=0, rolloff_exp=-12,
  rolloff_exp_delta=-6, adjust_rolloff_per_kHz=-6, quadratic_delta=0,
  quadratic_nHarm=3, rolloff_lip=6, trill_dep=0, trill_freq=30,
  rolloff_breathing=-13, temperature=0.01, min_epoch_length_ms=300, g0=100,
  sideband_width_hz=0, maleFemale=0, samplingRate=16000,
  windowLength_points=512, overlap=75, pitch_floor=25, pitch_ceiling=3500,
  pitchSamplingRate=3500, vocalTract_length=15.5, repeatBout=1,
  pitchAnchors=data.frame(time=c(0,0.17,1), value=c(383,421,358)),
  pitchAnchors_global=data.frame(time=c(0,1), value=c(0,0)),
  breathingAnchors=data.frame(time=c(0,49,256), value=c(-120,10,-120)),
  mouthAnchors=data.frame(time=c(0,0.15,1), value=c(0,0.49,0.2)),
  amplAnchors=data.frame(time=c(0,0.26,1), value=c(43,120,43)),
  amplAnchors_global=data.frame(time=c(0,1), value=c(120,120)),
  exactFormants=list(f1=data.frame(time=c(0), freq=c(400), amp=c(40),
  width=c(120)), f2=data.frame(time=c(0), freq=c(1000), amp=c(40),
  width=c(120)), f3=data.frame(time=c(0), freq=c(1500), amp=c(30),
  width=c(150))), exactFormants_unvoiced=NA)

 m = morph (formula1, formula2, nHybrids=5, playMorphs=TRUE)
 # use m$formulas to access formulas for each morph, m$sounds for waveforms
 playme(m$sounds[[2]], 16000)
}
