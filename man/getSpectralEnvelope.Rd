% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/source_spectrum.R
\name{getSpectralEnvelope}
\alias{getSpectralEnvelope}
\title{Spectral envelope}
\usage{
getSpectralEnvelope(nr, nc, exactFormants = NA, formantDep = 1,
  rolloff_lipRad = 6, mouthAnchors = NA, mouthOpening_threshold = 0,
  amplBoost_openMouth_dB = 0, vocalTract = NULL, temperature = 0,
  extraFormants_stochastic = 30, smoothLinear_factor = 1,
  samplingRate = 44100, plot = FALSE, dur_ms = NULL,
  colorTheme = c("bw", "seewave", "...")[1], nCols = 100, xlab = "Time",
  ylab = "Frequency, kHz", ...)
}
\arguments{
\item{nr}{the number of frequency bins = windowLength_points/2, where
windowLength_points is the size of window for Fourier transform}

\item{nc}{the number of time steps for Fourier transform}

\item{exactFormants}{either a character string like "aaui" referring to
default presets for speaker "M1" or a list of formant times, frequencies,
amplitudes, and bandwidths (see ex. below). exactFormants = NA defaults to
schwa. Time stamps for exactFormants and mouthOpening can be specified in
ms or an any other arbitarary scale, since duration is determined by
length(ampl). See \code{\link{getSpectralEnvelope}} for more details}

\item{formantDep}{scale factor of formant amplitude (1 = no change relative
to amplitudes in \code{exactFormants})}

\item{rolloff_lipRad}{the effect of lip radiation on source spectrum, dB/oct
(the default of +6 dB/oct produces a high-frequency boost when the mouth is
open)}

\item{mouthAnchors}{dataframe specifying the time (ms) and value (0 to 1) of
mouth-opening anchors}

\item{mouthOpening_threshold}{the mouth is considered to be open when its
opening is greater than \code{mouthOpening_threshold}. Defaults to 0}

\item{amplBoost_openMouth_dB}{amplify the voice when the mouth is open by
\code{amplBoost_openMouth_dB} dB}

\item{vocalTract}{the length of vocal tract, cm. Used for calculating formant
dispersion (for adding extra formants) and formant transitions as the mouth
opens and closes}

\item{temperature}{hyperparameter for regulating the amount of stochasticity
in sound generation}

\item{extraFormants_stochastic}{the amplitude of additional formants added above
the highest specified formant (only if temperature > 0)}

\item{smoothLinear_factor}{regulates smoothing of formant anchors (0 to +Inf)
as they are upsampled to the number of fft steps \code{nc}. This is
necessary because the input \code{exactFormants} normally contains fewer
sets of formant values than the number of fft steps.
\code{smoothLinear_factor} = 0: close to default spline; >3: approaches
linear extrapolation}

\item{samplingRate}{sampling frequency, Hz}

\item{plot}{if TRUE, produces a plot of the spectral envelope}

\item{dur_ms}{duration of the sound, ms (for plotting purposes only)}

\item{colorTheme}{black and white ('bw'), as in seewave package ('seewave'),
or another color theme (e.g. 'heat.colors')}

\item{nCols}{number of colors in the palette}

\item{xlab, ylab}{labels of axes}

\item{...}{other graphical parameters passed on to \code{image()}}
}
\value{
Returns a spectral filter (matrix nr x nc, where nr is the number of
  frequency bins = windowLength_points/2 and nc is the number of time steps)
}
\description{
Internal soundgen function.
}
\details{
Prepares a spectral envelope for filtering a sound to add formants, lip
radiation, and some stochastic component regulated by temperature.
exactFormants is specified as a list containing time, frequency, amplitude,
and width values for each formant (see examples). NB: each formant is
generated as a gamma distribution with mean = freq and SD = width. Formant
bandwidths in soundgen are therefore NOT compatible with formant bandwidths
used in Klatt synthesizer and other algorithms that rely on FIR instead of
FFT.
}
\examples{
# [a] with F1-F4 visible
image(t(getSpectralEnvelope(nr = 512, nc = 50,
  exactFormants = soundgen:::convertStringToFormants('a'),
  temperature = 0, samplingRate = 16000)))
# some "wiggling" of specified formants plus extra formants on top
image(t(getSpectralEnvelope(nr = 512, nc = 50,
  exactFormants = soundgen:::convertStringToFormants('a'),
  temperature = 0.1, extraFormants_stochastic = 10, samplingRate = 16000)))
# stronger extra formants
image(t(getSpectralEnvelope(nr = 512, nc = 50,
  exactFormants = soundgen:::convertStringToFormants('a'),
  temperature = 0.1, extraFormants_stochastic = 30, samplingRate = 16000)))
# a schwa based on the length of vocal tract = 15.5 cm
image(t(getSpectralEnvelope(nr = 512, nc = 50, exactFormants = NA,
  temperature = .1, vocalTract = 15.5, samplingRate = 16000)))

# manual specification of formants
image(t(getSpectralEnvelope(nr = 512, nc = 50,
samplingRate = 16000, exactFormants = list(
  'f1' = data.frame('time' = 0, 'freq' = 900, 'amp' = 30, 'width' = 120),
  'f2' = data.frame('time' = 0, 'freq' = 1300, 'amp' = 30, 'width' = 120),
  'f3' = data.frame('time' = 0, 'freq' = 3200, 'amp' = 20, 'width' = 200)))))
}
