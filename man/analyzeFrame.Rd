% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities_analyze.R
\name{analyzeFrame}
\alias{analyzeFrame}
\title{Analyze fft frame}
\usage{
analyzeFrame(frame, autoCorrelation = NULL, samplingRate = 44100,
  trackPitch = TRUE, pitch_methods = c("autocor", "cep", "spec", "dom"),
  cutoff_freq = 6000, dom_threshold = 0.1, dom_smoothing = 220,
  autocor_threshold = 0.75, autocor_smoothing = NULL,
  cep_threshold = 0.45, cep_smoothing = 3, cep_zp = 2^13,
  spec_threshold = 0.45, spec_peak = 0.8, spec_singlePeakCert = 0.6,
  spec_smoothing = 100, spec_peak_HNRslope = 0.1, spec_merge = 1,
  pitch_floor = 75, pitch_ceiling = 3500, nCands = 1)
}
\arguments{
\item{frame}{the real part of the spectrum of a frame, as returned by
\code{\link[stats]{fft}}}

\item{autoCorrelation}{pre-calculated autocorrelation of the input frame
(computationally more efficient than to do it here)}

\item{samplingRate}{sampling rate (Hz)}

\item{trackPitch}{if TRUE, attempt to find F0 in this frame (FALSE if entropy
is above some threshold - specified in \code{\link{analyze}})}

\item{pitch_methods}{methods of pitch estimation to consider for determining
pitch contour: 'autocor' = autocorrelation (~PRAAT), 'cep' = cepstral,
'spec' = spectral (~BaNa), 'dom' = lowest dominant frequency band}

\item{cutoff_freq}{(>0 to Nyquist Hz) repeat the calculation of spectral
descriptives after discarding all info above \code{cutoff_freq}.
Recommended if the original sampling rate varies across different analyzed
audio files}

\item{dom_threshold}{(0 to 1) to find the lowest dominant frequency band, we
do short-term FFT and take the lowest frequency with amplitude at least
dom_threshold}

\item{dom_smoothing}{the width of smoothing interval (Hz) for finding
\code{dom}}

\item{autocor_threshold}{(0 to 1) separate
voicing thresholds for detecting pitch candidates with three different
methods: autocorrelation, cepstrum, and BaNa algorithm (see Details). Note
that HNR is calculated even for unvoiced frames.}

\item{autocor_smoothing}{the width of smoothing interval (in bins) for
finding peaks in the autocorrelation function. Defaults to 7 for sampling
rate 44100 and smaller odd numbers for lower values of sampling rate}

\item{cep_threshold}{(0 to 1) separate
voicing thresholds for detecting pitch candidates with three different
methods: autocorrelation, cepstrum, and BaNa algorithm (see Details). Note
that HNR is calculated even for unvoiced frames.}

\item{cep_smoothing}{the width of smoothing interval (in bins) for finding
peaks in the cepstrum. Defaults to 31 for sampling rate 44100 and smaller
odd numbers for lower values of sampling rate}

\item{cep_zp}{zero-padding of the spectrum used for cepstral pitch detection
(final length of spectrum after zero-padding, in points)}

\item{spec_threshold}{(0 to 1) separate
voicing thresholds for detecting pitch candidates with three different
methods: autocorrelation, cepstrum, and BaNa algorithm (see Details). Note
that HNR is calculated even for unvoiced frames.}

\item{spec_peak}{when looking for putative harmonics in
the spectrum, the threshold for peak detection is calculated as
\code{spec_peak * (1 - HNR * spec_peak_HNRslope)}}

\item{spec_singlePeakCert}{(0 to 1) if F0 is calculated based on a single
harmonic ratio (as opposed to several ratios converging on the same
candidate), its certainty is taken to be \code{spec_singlePeakCert}}

\item{spec_smoothing}{the width of window for detecting peaks in the spectrum, Hz}

\item{spec_peak_HNRslope}{when looking for putative harmonics in
the spectrum, the threshold for peak detection is calculated as
\code{spec_peak * (1 - HNR * spec_peak_HNRslope)}}

\item{spec_merge}{pitch candidates within \code{spec_merge} semitones are
merged with boosted certainty}

\item{pitch_floor}{absolute bounds for pitch candidates (Hz)}

\item{pitch_ceiling}{absolute bounds for pitch candidates (Hz)}

\item{nCands}{maximum number of pitch candidates per method (except for
\code{dom}, which returns at most one candidate per frame)}
}
\value{
Returns a list with two components: $pitch_array contains pitch
  candidates for the frame, and $summaries contains other acoustic predictors
  like HNR, specSlope, etc.
}
\description{
Internal soundgen function.
}
\details{
This function performs the heavy lifting of pitch tracking and acoustic
analysis in general: it takes the spectrum of a single fft frame as input and
analyzes it.
}
