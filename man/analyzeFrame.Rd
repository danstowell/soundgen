% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities_analyze.R
\name{analyzeFrame}
\alias{analyzeFrame}
\title{Analyze fft frame}
\usage{
analyzeFrame(frame, autoCorrelation = NULL, samplingRate = 44100,
  zpCep = 2^13, cutoff_dom = 6000, voiced_threshold_autocor = 0.75,
  voiced_threshold_cep = 0.45, voiced_threshold_spec = 0.45,
  specPitchThreshold_nullNA = 0.8, pitchSpec_only_peak_weight = 0.6,
  slope_spec = 0.75, width_spec = 100, pitch_floor = 75,
  pitch_ceiling = 3500, dom_threshold = 0.1, maxNoCands = 1)
}
\arguments{
\item{frame}{the real part of the spectrum of a frame, as returned by
\code{\link[stats]{fft}}}

\item{autoCorrelation}{pre-calculated autocorrelation of the input frame
(computationally more efficient than to do it here)}

\item{samplingRate}{sampling rate (Hz)}

\item{zpCep}{zero-padding of the spectrum used for cepstral pitch detection
(points). Improves the precision of cepstral pitch detection quite
noticeably.}

\item{cutoff_dom}{do not consider frequencies above cutoff_dom when
calculating the lowest dominant frequency band (recommended if the original
sampling rate varies across different analyzed audio files)}

\item{voiced_threshold_autocor}{(0
to 1) separate thresholds for detecting pitch candidates with three
different methods: autocorrelation, cepstrum, and BaNa algorithm (see
Details). Note that HNR is still calculated for frames considered to be
unvoiced.}

\item{voiced_threshold_cep}{(0
to 1) separate thresholds for detecting pitch candidates with three
different methods: autocorrelation, cepstrum, and BaNa algorithm (see
Details). Note that HNR is still calculated for frames considered to be
unvoiced.}

\item{voiced_threshold_spec}{(0
to 1) separate thresholds for detecting pitch candidates with three
different methods: autocorrelation, cepstrum, and BaNa algorithm (see
Details). Note that HNR is still calculated for frames considered to be
unvoiced.}

\item{specPitchThreshold_nullNA}{when looking for putative
harmonics in the spectrum, the threshold for peak detection is calculated as
\code{specPitchThreshold_nullNA * (1 - HNR * slope_spec)}. For noisy sounds the
threshold is high to avoid false sumharmonics, while for tonal sounds it is low
to catch weak harmonics (BaNa - spectral pitch tracking)}

\item{pitchSpec_only_peak_weight}{(0 to 1) if only one pitchSpec candidate is
found, its weight (certainty) is taken to be
\code{pitchSpec_only_peak_weight}. This mainly has implications for how
much we trust the BaNa estimate vs. the autocorrelation estimate of f0.}

\item{slope_spec}{when looking for putative
harmonics in the spectrum, the threshold for peak detection is calculated as
\code{specPitchThreshold_nullNA * (1 - HNR * slope_spec)}. For noisy sounds the
threshold is high to avoid false sumharmonics, while for tonal sounds it is low
to catch weak harmonics (BaNa - spectral pitch tracking)}

\item{width_spec}{the width of window for detecting peaks in the spectrum
(BaNa - spectral pitch tracking)}

\item{pitch_floor}{bounds for pitch candidates (Hz)}

\item{pitch_ceiling}{bounds for pitch candidates (Hz)}

\item{dom_threshold}{(0 to 1) to find the lowest dominant frequency band, we
do short-term FFT and take the lowest frequency with amplitude at least
dom_threshold}
}
\value{
Returns a list with two components: $pitch_array contains pitch
  candidates for the frame, and $summaries contains other acoustic predictors
  like HNR, specSlope, etc.
}
\description{
Internal soundgen function.
}
\details{
This monstrous function performs the heavy lifting of pitch tracking and
acoustic analysis in general: it takes the spectrum of a single fft frame as
input and analyzes it. Since a lot of subroutines speak to one another, it's
easier to lump them into one function.
}
