% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utilities_soundgen.R
\name{crossFade}
\alias{crossFade}
\title{Join two waveforms by cross-fading}
\usage{
crossFade(ampl1, ampl2, length_ms = 15, samplingRate = 44100,
  length_points = NULL)
}
\arguments{
\item{ampl1, amp2}{two numeric vectors (waveforms) to be joined}

\item{length_ms}{the length of overlap, in ms (doesn't need to be specified
if length_points is not NULL)}

\item{samplingRate}{the sampling rate of input vectors, in Hz}

\item{length_points}{(optional) the length of overlap, in points (defaults to
NULL)}
}
\value{
Returns the index of the last negative value before zero crossing
  closest to specified location.
}
\description{
\code{crossFade} joins two input vectors (waveforms) by cross-fading. It
truncates both input vectors, so that ampl1 ends with a zero crossing and
ampl2 starts with a zero crossing. Then it cross-fades both vectors linearly
with an overlap of length_ms or length_points. If the input vectors are too
short for the specified length of cross-faded region, the two vectors are
concatenated at zero crossings instead of cross-fading. Soundgen uses
\code{crossFade} for gluing together epochs in generateSyllable()
}
\examples{
sound1 = sin(1:100/9)
sound2 = sin(7:107/3)
plot(c(sound1, sound2), type='b') # an ugly discontinuity at 100 that will make an audible click
sound = crossFade(sound1, sound2, length_points=5)
plot(sound, type='b') # a nice, smooth transition
length(sound) # but note that cross-fading costs us ~60 points because of trimming to zero crossings
}
