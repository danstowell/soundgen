% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SSM.R
\name{ssm}
\alias{ssm}
\title{Self-similarity matrix}
\usage{
ssm(x, samplingRate = NULL, windowLength = 40, step = NULL,
  maxfreq = NULL, nbands = NULL, MFCC_to_use = 2:13,
  input = c("cepstrum", "audiogram")[1], normalizeInput = FALSE,
  simil_measure = c("cosine", "correlation")[1], plot = T, returnSSM = T,
  novelty_col = "black", novelty_lwd = 3, kernel_ms = 200,
  kernel_sd = 0.2, win = 3, ...)
}
\arguments{
\item{x}{path to a .wav file or a vector of amplitudes with specified
samplingRate}

\item{samplingRate}{sampling rate of \code{x} (only needed if
\code{x} is a numeric vector, rather than a .wav file)}

\item{windowLength}{length of fft window (ms)}

\item{step}{fft step (ms). Defaults to \code{windowLength / 4}}

\item{maxfreq}{highest band edge of mel filters (Hz). Defaults to \code{samplingRate / 2}. See \code{\link[tuneR]{melfcc}}}

\item{nbands}{number of warped spectral bands to use. Defaults to \code{100 * windowLength / 20} See \code{\link[tuneR]{melfcc}}}

\item{MFCC_to_use}{mel-frequency cepstral coefficients to use}

\item{input}{either MFCCs ("cepstrum") or mel-filtered spectrum ("audiogram")}

\item{normalizeInput}{if TRUE, each fft frame is normalized by max power. NB: do this if using cosine similarity with spectrum (audiogram)}

\item{simil_measure}{method for comparing frames: either cosine similarity or Pearson's correlation}

\item{plot}{if TRUE, produces a SSM plot}

\item{returnSSM}{if TRUE, returns the SSM}

\item{novelty_col}{the color of novelty contour}

\item{novelty_lwd}{the linewidth of novelty contour}

\item{kernel_ms}{size of checkerboard kernel for calculating novelty (the larger, the more global vs. local the novelty)}

\item{kernel_sd}{SD of checkerboard kernel for calculating novelty}

\item{win}{window for averaging SSM (reduces its size). Forced to odd: 1 3 5 etc}

\item{...}{other graphical parameters}
}
\value{
If \code{returnSSM} is TRUE, returns a list of two components: $ssm contains the self-similarity matrix, and $novelty contains the novelty vector. If \code{returnSSM} is FALSE, only produces a plot.
}
\description{
Calculates the self-similarity matrix and novelty vector for a sound.
}
\examples{
sound = c(generateBout(), generateBout(nSyl = 4, sylDur_mean = 200,
  pauseDur_mean = 140,  pitchAnchors = list(time = c(0, 0.65, 1),
  value = c(977, 1540, 826)), exactFormants = NA))
s = ssm(sound, samplingRate = 16000,
        input = 'cepstrum', win = 3, kernel_ms = 350)  # detailed, local features
s = ssm(sound, samplingRate = 16000,
        input = 'cepstrum', win = 7, kernel_ms = 800)  # more global
plot(s$novelty, type='b')  # use for peak detection, etc
}
\references{
\itemize{
  \item El Badawy, D., Marmaroli, P., & Lissek, H. (2013). Audio
  Novelty-Based Segmentation of Music Concerts. In Acoustics 2013 (No.
  EPFL-CONF-190844)
  \item Foote, J. (1999, October). Visualizing music and
  audio using self-similarity. In Proceedings of the seventh ACM
  international conference on Multimedia (Part 1) (pp. 77-80). ACM.
  \item
  Foote, J. (2000). Automatic audio segmentation using a measure of audio
  novelty. In Multimedia and Expo, 2000. ICME 2000. 2000 IEEE International
  Conference on (Vol. 1, pp. 452-455). IEEE.
  }
}
